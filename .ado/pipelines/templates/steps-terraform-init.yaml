parameters:
  terraformStorageAccountName: ''
  terraformStorageResourceGroupName: ''
  terraformStateFilename:    ''
  terraformWorkingDirectory: '.'

steps:
# Install Terraform tooling (once)
- task: Bash@3
  displayName: 'Install Terraform CLI v$(terraformVersion)'
  retryCountOnTaskFailure: 1
  inputs:
    targetType: 'inline'
    script: |
      curl -LO https://releases.hashicorp.com/terraform/$(terraformVersion)/terraform_$(terraformVersion)_linux_amd64.zip
      unzip -o terraform_$(terraformVersion)_linux_amd64.zip
      sudo mv terraform /usr/local/bin/
      terraform -version

# Set Terraform Backend env vars
- task: AzureCLI@2
  displayName: 'Set Terraform Backend config env vars'
  retryCountOnTaskFailure: 1
  inputs:
    azureSubscription: $(azureServiceConnection)
    addSpnToEnvironment: true
    scriptType: pscore
    scriptLocation: inlineScript
    inlineScript: |
      echo "*** Setting Subscription environment variables for Terraform backend config"
      $SUBSCRIPTION_ID=$(az account show --query id --output tsv)
      echo "##vso[task.setvariable variable=ARM_CLIENT_ID]$($env:servicePrincipalId)"
      echo "##vso[task.setvariable variable=ARM_CLIENT_SECRET;issecret=true]$($env:servicePrincipalKey)"
      echo "##vso[task.setvariable variable=ARM_TENANT_ID]$($env:tenantId)"
      echo "##vso[task.setvariable variable=ARM_SUBSCRIPTION_ID]$SUBSCRIPTION_ID"

# Terraform Init (must be done in the working directory before validate/plan/apply)
- task: Bash@3
  displayName: "Terraform Init"
  inputs:
    targetType: 'inline'
    workingDirectory: ${{ parameters.terraformWorkingDirectory }}
    script: |
      set -eux
      until terraform init \
        -backend-config=resource_group_name=${{ parameters.terraformStorageResourceGroupName }} \
        -backend-config=storage_account_name=${{ parameters.terraformStorageAccountName }} \
        -backend-config=container_name=tfstate \
        -backend-config=key=${{ parameters.terraformStateFilename }} \
        -backend-config=subscription_id="$(ARM_SUBSCRIPTION_ID)" \
        -backend-config=tenant_id="$(ARM_TENANT_ID)" \
        -backend-config=client_id="$(ARM_CLIENT_ID)" \
        -backend-config=client_secret="$(ARM_CLIENT_SECRET)" \
        -backend-config=use_azuread_auth="true"; do
        echo "*** Error on terraform init. Will retry in 10 sec"
        sleep 10
      done

# Terraform Validate (must be after init, in the same workingDirectory)
- task: Bash@3
  displayName: "Terraform Validate"
  inputs:
    targetType: 'inline'
    workingDirectory: ${{ parameters.terraformWorkingDirectory }}
    script: |
      terraform validate
